{"version":3,"sources":["utils/duration/index.js","pomodoro/DurationFocus.js","pomodoro/DurationBreak.js","pomodoro/TimeControl.js","utils/class-names/index.js","pomodoro/Progress.js","pomodoro/ToDo.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","App.js","index.js"],"names":["minutesToDuration","givenMinutes","minutes","Math","floor","toString","padStart","DurationFocus","props","focusDuration","handleFocusDecrement","handleFocusIncrement","isSessionActive","className","data-testid","type","onClick","undefined","disabled","DurationBreak","breakDuration","handleBreakDecrement","handleBreakIncrement","TimeControl","classNameToBoolean","playPause","handleStopButton","isTimerRunning","role","aria-label","title","oi","Object","entries","reduce","classes","value","concat","filter","join","Progress","progressBarWidth","currentState","timer","isSessionPause","currentTime","style","display","givenSeconds","seconds","round","secondsToDuration","height","aria-valuemin","aria-valuemax","aria-valuenow","width","Task","task","index","completeTask","removeTask","textDecoration","completed","background","CreateTask","addTask","useState","setValue","onSubmit","e","preventDefault","placeholder","onChange","target","Todo","tasksRemaining","setTasksRemaining","tasks","setTasks","useEffect","length","newTasks","splice","map","key","Pomodoro","setIsTimerRunning","setFocusDuration","setBreakDuration","setIsSessionActive","setIsSessionPause","setTimer","setCurrentState","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","Audio","play","prevState","currentValue","max","min","padding","ToDo","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9163f8f.chunk.js","sourcesContent":["/**\n * Formats a number of minutes as 'mm:00'.\n *\n * For example,\n *    minutesToDuration(3) = '03:00'\n *    minutesToDuration(45) = '45:00'\n *\n * @param givenMinutes\n *    the number of minutes in the duration\n * @returns {string}\n *    the given minutes formatted as 'mm:00'\n */\n\nexport function minutesToDuration(givenMinutes) {\n  const minutes = Math.floor(givenMinutes).toString().padStart(2, \"0\");\n  return `${minutes}:00`;\n}\n\n/**\n * Formats a number of seconds as 'mm:ss'.\n *\n * For example,\n *    secondsToDuration(305) = '05:05'\n *    secondsToDuration(930) = '15:30'\n *\n * @param givenSeconds\n *    the number of seconds in the duration\n * @returns {string}\n *    the given seconds formatted as 'mm:ss'\n */\n\nexport function secondsToDuration(givenSeconds) {\n  const minutes = Math.floor((givenSeconds % 3600) / 60)\n    .toString()\n    .padStart(2, \"0\");\n  const seconds = Math.round(givenSeconds % 60)\n    .toString()\n    .padStart(2, \"0\");\n  return `${minutes}:${seconds}`;\n}\n","import React from \"react\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction DurationFocus(props) {\n  const {\n    focusDuration,\n    handleFocusDecrement,\n    handleFocusIncrement,\n    isSessionActive,\n  } = props;\n  return (\n    <div className=\"input-group input-group-lg mb-2\">\n      <span className=\"input-group-text\" data-testid=\"duration-focus\">\n        {/* TODO: Update this text to display the current focus session duration */}\n        Focus Duration: {minutesToDuration(focusDuration)}\n      </span>\n      <div className=\"input-group-append\">\n        {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          data-testid=\"decrease-focus\"\n          onClick={!isSessionActive ? handleFocusDecrement : undefined}\n          disabled={isSessionActive}\n        >\n          <span className=\"oi oi-minus\" />\n        </button>\n        {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          data-testid=\"increase-focus\"\n          onClick={!isSessionActive ? handleFocusIncrement : undefined}\n          disabled={isSessionActive}\n        >\n          <span className=\"oi oi-plus\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default DurationFocus;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction DurationBreak(props) {\n  const {\n    breakDuration,\n    handleBreakDecrement,\n    handleBreakIncrement,\n    isSessionActive,\n  } = props;\n\n  return (\n    <div className=\"input-group input-group-lg mb-2\">\n      <span className=\"input-group-text\" data-testid=\"duration-break\">\n        {/* TODO: Update this text to display the current break session duration */}\n        Break Duration: {minutesToDuration(breakDuration)}\n      </span>\n      <div className=\"input-group-append\">\n        {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          data-testid=\"decrease-break\"\n          onClick={!isSessionActive ? handleBreakDecrement : undefined}\n          disabled={isSessionActive}\n        >\n          <span className=\"oi oi-minus\" />\n        </button>\n        {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n        <button\n          type=\"button\"\n          className=\"btn btn-secondary\"\n          data-testid=\"increase-break\"\n          onClick={!isSessionActive ? handleBreakIncrement : undefined}\n          disabled={isSessionActive}\n        >\n          <span className=\"oi oi-plus\" />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nDurationBreak.propTypes = {\n  breakDuration: PropTypes.number.isRequired,\n  handleBreakDecrement: PropTypes.func.isRequired,\n  handleBreakIncrement: PropTypes.func.isRequired,\n  isSessionActive: PropTypes.bool.isRequired,\n};\n\nexport default DurationBreak;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"../utils/class-names\";\n\nfunction TimeControl(props) {\n  const {\n    playPause,\n    handleStopButton,\n    isSessionActive,\n    isTimerRunning,\n  } = props;\n  return (\n    <div\n      className=\"btn-group btn-group-lg mb-2\"\n      role=\"group\"\n      aria-label=\"Timer controls\"\n    >\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        data-testid=\"play-pause\"\n        title=\"Start or pause timer\"\n        onClick={playPause}\n      >\n        <span\n          className={classNames({\n            oi: true,\n            \"oi-media-play\": !isTimerRunning,\n            \"oi-media-pause\": isTimerRunning,\n          })}\n        />\n      </button>\n      {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n      {/* TODO: Disable the stop button when there is no active session */}\n      <button\n        type=\"button\"\n        className=\"btn btn-secondary\"\n        data-testid=\"stop\"\n        title=\"Stop the session\"\n        onClick={handleStopButton}\n        disabled={!isSessionActive}\n      >\n        <span className=\"oi oi-media-stop\" />\n      </button>\n    </div>\n  );\n}\n\nTimeControl.propTypes = {\n  playPause: PropTypes.func.isRequired,\n  handleStopButton: PropTypes.func.isRequired,\n  isSessionActive: PropTypes.bool.isRequired,\n  isTimerRunning: PropTypes.bool.isRequired,\n};\n\nexport default TimeControl;\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\n\nfunction Progress(props) {\n  const {\n    currentState,\n    timer,\n    isSessionActive,\n    focusDuration,\n    breakDuration,\n    isSessionPause,\n  } = props;\n\n  let progressBarWidth;\n  // current time for given sesssion (focus/break)\n  let currentTime = currentState === \"focus\" ? focusDuration : breakDuration;\n  //change currenttiem to second\n  currentTime = currentTime * 60;\n\n  const timeElapse = currentTime - timer;\n\n  if (timer === 0) {\n    progressBarWidth = 100;\n  } else {\n    progressBarWidth = (100 / currentTime) * timeElapse;\n  }\n\n  if (isSessionActive) {\n    return (\n      <div style={{ display: isSessionActive ? \"block\" : \"none\" }}>\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            <h2 data-testid=\"session-title\">\n              {currentState === \"focus\" ? \"Focusing \" : \"On Break \"}\n              for{\" \"}\n              {currentState === \"focus\"\n                ? minutesToDuration(focusDuration)\n                : minutesToDuration(breakDuration)}{\" \"}\n              minutes\n            </h2>\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timer)} remaining\n            </p>\n            <h4>{isSessionPause === true ? \"PAUSED\" : \" \"}</h4>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progressBarWidth} // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `${progressBarWidth}%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Progress;\n","import React, { useState, useEffect } from \"react\";\n\nfunction Task({ task, index, completeTask, removeTask }) {\n  return (\n    <div\n      className=\"task\"\n      style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\n    >\n      {task.title}\n\n      <button style={{ background: \"gray\" }} onClick={() => removeTask(index)}>\n        x\n      </button>\n      <button onClick={() => completeTask(index)}>Complete</button>\n    </div>\n  );\n}\n\nfunction CreateTask({ addTask }) {\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTask(value);\n    setValue(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"input\"\n        value={value}\n        placeholder=\"Add a new task\"\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </form>\n  );\n}\n\nfunction Todo() {\n  const [tasksRemaining, setTasksRemaining] = useState(0);\n  const [tasks, setTasks] = useState([\n    {\n      title: \"Code Review\",\n      completed: false,\n    },\n  ]);\n\n  useEffect(() => {\n    setTasksRemaining(tasks.filter((task) => !task.completed).length);\n  });\n\n  const addTask = (title) => {\n    const newTasks = [...tasks, { title, completed: false }];\n    setTasks(newTasks);\n  };\n\n  const completeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks[index].completed = true;\n    setTasks(newTasks);\n  };\n\n  const removeTask = (index) => {\n    const newTasks = [...tasks];\n    newTasks.splice(index, 1);\n    setTasks(newTasks);\n  };\n\n  return (\n    <div className=\"todo-container\">\n      <div className=\"header\">List Of Tasks ({tasksRemaining})</div>\n      <div className=\"tasks\">\n        {tasks.map((task, index) => (\n          <Task\n            task={task}\n            index={index}\n            completeTask={completeTask}\n            removeTask={removeTask}\n            key={index}\n          />\n        ))}\n      </div>\n      <div className=\"create-task\">\n        <CreateTask addTask={addTask} />\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;\n","import React, { useState, useEffect } from \"react\";\nimport useInterval from \"../utils/useInterval\";\nimport DurationFocus from \"./DurationFocus\";\nimport DurationBreak from \"./DurationBreak\";\nimport TimeControl from \"./TimeControl\";\nimport Progress from \"./Progress\";\nimport ToDo from \"./ToDo\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  const [focusDuration, setFocusDuration] = useState(25); // in minute\n  const [breakDuration, setBreakDuration] = useState(5); //in minute\n\n  // adjust session active default to inactive\n  const [isSessionActive, setIsSessionActive] = useState(false);\n\n  //adjust pause default to pause\n  const [isSessionPause, setIsSessionPause] = useState(true);\n\n  //set up timer remaining\n  const [timer, setTimer] = useState(1500); //in second\n\n  // current session default to \"Focus\"\n  const [currentState, setCurrentState] = useState(\"focus\");\n\n  // handle increment on focus\n  const handleFocusIncrement = () => {\n    setFocusDuration((currentValue) => {\n      return Math.min(60, currentValue + 5);\n    });\n  };\n\n  //handle decrement on focus\n  const handleFocusDecrement = () => {\n    setFocusDuration((currentValue) => {\n      return Math.max(5, currentValue - 5);\n    });\n  };\n\n  //handle inrement on break\n  const handleBreakIncrement = () => {\n    setBreakDuration((currentValue) => {\n      return Math.min(15, currentValue + 1);\n    });\n  };\n\n  //handle decrement on break\n  const handleBreakDecrement = () => {\n    setBreakDuration((currentValue) => {\n      return Math.max(1, currentValue - 1);\n    });\n  };\n\n  //handle stop button\n  const handleStopButton = () => {\n    setIsSessionActive(false);\n    setIsTimerRunning(false);\n    setIsSessionPause(true);\n    setCurrentState(\"focus\");\n  };\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(\n    () => {\n      if (timer === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n\n        const newTime =\n          currentState === \"focus\" ? breakDuration : focusDuration;\n\n        // set up breakDuration / focusDuration in second\n        setTimer(newTime * 60);\n\n        // switching session focus /  Break\n        setCurrentState((prevState) =>\n          prevState === \"focus\" ? \"break\" : \"focus\"\n        );\n        return;\n      }\n      setTimer((currentTime) => currentTime - 1);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Switch play and pause when session is active\n   * toggle states\n   */\n  function playPause() {\n    if (!isSessionActive) {\n      setIsSessionActive(true);\n      setTimer(focusDuration * 60);\n    }\n    setIsSessionPause((prevState) => !prevState);\n\n    setIsTimerRunning((prevState) => !prevState);\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <DurationFocus\n            focusDuration={focusDuration}\n            handleFocusDecrement={handleFocusDecrement}\n            handleFocusIncrement={handleFocusIncrement}\n            isSessionActive={isSessionActive}\n          />\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <DurationBreak\n              breakDuration={breakDuration}\n              handleBreakDecrement={handleBreakDecrement}\n              handleBreakIncrement={handleBreakIncrement}\n              isSessionActive={isSessionActive}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <TimeControl\n            playPause={playPause}\n            isTimerRunning={isTimerRunning}\n            handleStopButton={handleStopButton}\n            isSessionActive={isSessionActive}\n          />\n        </div>\n      </div>\n      <Progress\n        currentState={currentState}\n        timer={timer}\n        isSessionActive={isSessionActive}\n        focusDuration={focusDuration}\n        breakDuration={breakDuration}\n        isSessionPause={isSessionPause}\n      />\n\n      <div className=\"row\">\n        <div className=\"col\" style={{ display: \"block\", padding: \"2rem\" }}>\n          <ToDo />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}